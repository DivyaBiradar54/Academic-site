"use strict";(()=>{var e={};e.id=439,e.ids=[439],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},4595:(e,r,a)=>{a.r(r),a.d(r,{config:()=>u,default:()=>d,routeModule:()=>m});var s={};a.r(s),a.d(s,{default:()=>handler});var t=a(1802),n=a(7153),i=a(6249),o=a(3524);let l=new o.PrismaClient;async function handler(e,r){try{if("GET"===e.method){let{emailFrom:a,emailTo:s}=e.query;if(!a||!s)return r.status(400).json({message:"Both emailFrom and emailTo are required."});let t=await l.message.findMany({where:{OR:[{emailFrom:a,emailTo:s},{emailFrom:s,emailTo:a}]},orderBy:{createdAt:"asc"}});return r.status(200).json(t)}if("POST"!==e.method)return r.setHeader("Allow",["GET","POST"]),r.status(405).json({message:`Method ${e.method} not allowed.`});{let{emailFrom:a,emailTo:s,message:t,Name:n}=e.body;if(!a||!s||!t||!n)return r.status(400).json({message:"All fields are required."});let i=await l.message.create({data:{emailFrom:a,emailTo:s,message:t,Name:n}});return r.status(201).json({message:"Message sent successfully!",newMessage:i})}}catch(e){return console.error("Error in /api/message:",e),r.status(500).json({message:"Internal server error."})}}let d=(0,i.l)(s,"default"),u=(0,i.l)(s,"config"),m=new t.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/message",pathname:"/api/message",bundlePath:"",filename:""},userland:s})}};var r=require("../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),a=r.X(0,[222],()=>__webpack_exec__(4595));module.exports=a})();