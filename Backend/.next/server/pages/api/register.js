"use strict";(()=>{var e={};e.id=553,e.ids=[553],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},8599:(e,r,s)=>{s.r(r),s.d(r,{config:()=>c,default:()=>u,routeModule:()=>m});var a={};s.r(a),s.d(a,{default:()=>handler});var t=s(1802),i=s(7153),o=s(6249),n=s(3524),d=s(5668);let l=new n.PrismaClient;async function handler(e,r){if(await (0,d.Z)(e,r),"GET"===e.method)return r.status(200).json({message:"This is the register API. Use POST to register a new user."});if("POST"===e.method){let{username:s,email:a,password:t}=e.body;try{if(!s||!a||!t)return r.status(400).json({message:"All fields are required."});let e=await l.registration.findFirst({where:{OR:[{username:s},{email:a}]}});if(e)return r.status(400).json({message:"Username or email already exists."});await l.registration.create({data:{username:s,email:a,password:t}});let i=await l.user.create({data:{name:s,email:a,password:t,userType:"basic"}});await l.profile.create({data:{userId:i.id,email:a,password:t,academicBackground:"",researchInterests:"",collegeInfo:""}}),r.status(201).json({message:"Registration successful!",user:i})}catch(e){console.error("Error in /api/register:",e),r.status(500).json({message:"Error registering user",error:e.message})}}else r.setHeader("Allow",["POST"]),r.status(405).end(`Method ${e.method} Not Allowed`)}let u=(0,o.l)(a,"default"),c=(0,o.l)(a,"config"),m=new t.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/register",pathname:"/api/register",bundlePath:"",filename:""},userland:a})},5668:(e,r,s)=>{s.d(r,{Z:()=>corsMiddleware});let a=require("cors");var t=s.n(a);let i=t()({origin:"*",methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]});async function corsMiddleware(e,r){await new Promise((s,a)=>{i(e,r,e=>e instanceof Error?a(e):s(e))})}}};var r=require("../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),s=r.X(0,[222],()=>__webpack_exec__(8599));module.exports=s})();