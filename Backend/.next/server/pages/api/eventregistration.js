"use strict";(()=>{var e={};e.id=186,e.ids=[186],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7882:(e,t,r)=>{r.r(t),r.d(t,{config:()=>u,default:()=>d,routeModule:()=>c});var s={};r.r(s),r.d(s,{default:()=>handler});var a=r(1802),n=r(7153),i=r(6249),o=r(3524);let l=new o.PrismaClient;async function handler(e,t){if("POST"==e.method){let{name:r,email:s,phoneNumber:a,eventId:n}=e.body;if(console.log(r,s,a,n),!r||!s||!a||!n)return t.status(400).json({message:"All fields are required."});try{let e=await l.eventRegistration.create({data:{name:r,email:s,phoneNumber:a,eventAttending:parseInt(n)}});t.status(201).json({message:"Registration successful!",registration:e})}catch(e){console.error("Error saving registration:",e),t.status(500).json({message:"Internal server error."})}}else t.setHeader("Allow",["POST"]),t.status(405).json({message:`Method ${e.method} not allowed.`})}let d=(0,i.l)(s,"default"),u=(0,i.l)(s,"config"),c=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/eventregistration",pathname:"/api/eventregistration",bundlePath:"",filename:""},userland:s})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222],()=>__webpack_exec__(7882));module.exports=r})();