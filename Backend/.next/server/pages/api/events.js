"use strict";(()=>{var e={};e.id=174,e.ids=[174],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},2949:(e,t,r)=>{r.r(t),r.d(t,{config:()=>u,default:()=>d,routeModule:()=>c});var n={};r.r(n),r.d(n,{default:()=>handler});var a=r(1802),s=r(7153),o=r(6249),i=r(3524);let l=new i.PrismaClient;async function handler(e,t){if("GET"===e.method)try{let e=await l.event.findMany(),r=e.reduce((e,t)=>{let r=new Date(t.eventDate).toLocaleString("en-US",{month:"long"});return e[r]||(e[r]=[]),e[r].push(t),e},{});t.status(200).json(r)}catch(e){console.error("Error fetching events:",e),t.status(500).json({message:"Internal server error."})}else t.setHeader("Allow",["GET"]),t.status(405).end(`Method ${e.method} Not Allowed`)}let d=(0,o.l)(n,"default"),u=(0,o.l)(n,"config"),c=new a.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/events",pathname:"/api/events",bundlePath:"",filename:""},userland:n})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222],()=>__webpack_exec__(2949));module.exports=r})();