"use strict";(()=>{var e={};e.id=994,e.ids=[994],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5584:(e,r,a)=>{a.r(r),a.d(r,{config:()=>m,default:()=>u,routeModule:()=>c});var s={};a.r(s),a.d(s,{default:()=>handler});var t=a(1802),n=a(7153),i=a(6249),o=a(3524),d=a(5668);let l=new o.PrismaClient;async function handler(e,r){if(await (0,d.Z)(e,r),"POST"!==e.method)return r.setHeader("Allow",["POST"]),r.status(405).json({message:`Method ${e.method} Not Allowed.`});{let{username:a,password:s}=e.body;try{let e=await l.user.findFirst({where:{OR:[{name:a},{email:a}]}});if(!e)return r.status(404).json({message:"User not found."});if(s!==e.password)return r.status(401).json({message:"Invalid password. Please try again."});return r.status(200).json({userId:e.id,username:e.name,email:e.email,message:"Login successful."})}catch(e){return console.error("Error in Login API:",e),r.status(500).json({message:"Internal server error."})}}}let u=(0,i.l)(s,"default"),m=(0,i.l)(s,"config"),c=new t.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/login",pathname:"/api/login",bundlePath:"",filename:""},userland:s})},5668:(e,r,a)=>{a.d(r,{Z:()=>corsMiddleware});let s=require("cors");var t=a.n(s);let n=t()({origin:"*",methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]});async function corsMiddleware(e,r){await new Promise((a,s)=>{n(e,r,e=>e instanceof Error?s(e):a(e))})}}};var r=require("../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),a=r.X(0,[222],()=>__webpack_exec__(5584));module.exports=a})();