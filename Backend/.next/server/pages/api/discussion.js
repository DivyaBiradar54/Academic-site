"use strict";(()=>{var e={};e.id=341,e.ids=[341],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},4222:(e,t,r)=>{r.r(t),r.d(t,{config:()=>m,default:()=>c,routeModule:()=>l});var s={};r.r(s),r.d(s,{default:()=>handler});var a=r(1802),o=r(7153),n=r(6249),i=r(3524);let d=new i.PrismaClient;async function handler(e,t){let{topicId:r,commentId:s}=e.query;if(r||(r=e.body.topicId),"GET"===e.method)try{if(!r)return t.status(400).json({message:"topicId is required."});let e=await d.comment.findMany({where:{topicId:parseInt(r)},orderBy:{timestamp:"desc"}});t.status(200).json(e)}catch(e){console.error("Error fetching comments:",e),t.status(500).json({message:"Error fetching comments."})}else if("POST"===e.method){let{author:a,text:o}=e.body;if(s||(s=e.body.commentId),s)try{let e=await d.comment.update({where:{id:parseInt(s)},data:{likes:{increment:1}}});return t.status(200).json(e)}catch(e){return console.error("Error liking the comment:",e),t.status(500).json({message:"Error liking the comment."})}if(!a||!o||!r)return t.status(400).json({message:"All fields are required."});try{let e=await d.comment.create({data:{topicId:parseInt(r),author:a,text:o}});t.status(201).json(e)}catch(e){console.error("Error creating comment:",e),t.status(500).json({message:"Error creating comment."})}}else t.status(405).json({message:`Method ${e.method} not allowed.`})}let c=(0,n.l)(s,"default"),m=(0,n.l)(s,"config"),l=new a.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/discussion",pathname:"/api/discussion",bundlePath:"",filename:""},userland:s})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222],()=>__webpack_exec__(4222));module.exports=r})();